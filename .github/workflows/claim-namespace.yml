name: Claim Namespace
on:
  issues:
    types: [opened, edited, labeled]
jobs:
  namespace:
    name: Namespace Claim Checks
    runs-on: ubuntu-latest
    permissions:
      issues: write
    if: ${{ contains(github.event.issue.labels.*.name, 'namespace') && !contains(github.event.issue.labels.*.name, 'granted') && !contains(github.event.issue.labels.*.name, 'denied') && startsWith(github.event.issue.title, 'Claiming namespace') }}
    steps:
      - id: get_namespace
        name: Get namespace name
        uses: actions/github-script@v7
        with:
          script: |
            let namespace = context.payload.issue.title.substring('Claiming namespace'.length).trim();
            if((namespace.startsWith('[') && namespace.endsWith(']')) || (namespace.startsWith('`') && namespace.endsWith('`'))) {
              namespace = namespace.substring(1, namespace.length - 1);
            }

            if(!namespace) {
              core.setFailed('Could not get namespace name');
            } else {
              core.setOutput('namespace', namespace);
            }
      - id: log_namespace
        name: Log namespace name
        run: echo "${{steps.get_namespace.outputs.namespace}}"
      - id: get_namespace_data
        name: Namespace members API request
        uses: JamesIves/fetch-api-data-action@v2
        with:
          endpoint: https://open-vsx.org/admin/api/namespace/${{steps.get_namespace.outputs.namespace}}/members?token=${{secrets.OPENVSX_TOKEN}}
          configuration: '{ "method": "GET" }'
      - id: namespace_members
        uses: actions/github-script@v7
        env:
          DATA: ${{ steps.get_namespace_data.outputs.fetchApiData }}
        with:
          script: |
            const json = JSON.parse(process.env.DATA);
            core.setOutput('members', JSON.stringify(json.namespaceMemberships));
      - id: make_owner
        uses: actions/github-script@v7
        env:
          MEMBERS: ${{ steps.namespace_members.outputs.members }}
          LOGIN_NAME: ${{ github.event.issue.user.login }}
        with:
          script: |
            const members = JSON.parse(process.env.MEMBERS);
            const makeOwner = members.length == 1 && members[0].user.loginName == process.env.LOGIN_NAME && members[0].role == 'contributor';
            core.setOutput('makeOwner', makeOwner);
      - id: change_member
        name: Namespace change member API request
        if: ${{ steps.make_owner.outputs.makeOwner == 'true' }}
        uses: JamesIves/fetch-api-data-action@v2
        with:
          endpoint: https://open-vsx.org/admin/api/namespace/${{steps.get_namespace.outputs.namespace}}/change-member?user=${{github.event.issue.user.login}}&provider=github&role=owner&token=${{secrets.OPENVSX_TOKEN}}
          configuration: '{ "method": "POST" }'
      - id: grant_namespace
        name: Grant namespace
        if: ${{ steps.make_owner.outputs.makeOwner == 'true' && fromJSON(steps.change_member.outputs.fetchApiData).success == format('Changed role of {0} in {1} to owner.', github.event.issue.user.login, steps.get_namespace.outputs.namespace) }}
        run: |
          gh issue edit "$NUMBER" --add-label "$LABELS" --add-assignee "$ASSIGNEE"
          gh issue close "$NUMBER" -r "completed"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
          NUMBER: ${{ github.event.issue.number }}
          LABELS: granted
          ASSIGNEE: amvanbaren